[{"/Users/deanfoster/Personal Budget/view/client/src/index.js":"1","/Users/deanfoster/Personal Budget/view/client/src/App.js":"2","/Users/deanfoster/Personal Budget/view/client/src/reportWebVitals.js":"3","/Users/deanfoster/Personal Budget/view/client/src/Components/Envelopes.js":"4","/Users/deanfoster/Personal Budget/view/client/src/Components/Modal.js":"5"},{"size":536,"mtime":1652934477467,"results":"6","hashOfConfig":"7"},{"size":181,"mtime":1652932649703,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1652924102845,"results":"9","hashOfConfig":"7"},{"size":2011,"mtime":1653014793850,"results":"10","hashOfConfig":"7"},{"size":2731,"mtime":1653013233550,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"cgo0gt",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"15"},"/Users/deanfoster/Personal Budget/view/client/src/index.js",[],[],[],"/Users/deanfoster/Personal Budget/view/client/src/App.js",[],[],"/Users/deanfoster/Personal Budget/view/client/src/reportWebVitals.js",[],[],"/Users/deanfoster/Personal Budget/view/client/src/Components/Envelopes.js",[],[],"/Users/deanfoster/Personal Budget/view/client/src/Components/Modal.js",["29"],[],"import React, { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport { InputLabel, TextField, InputAdornment, OutlinedInput } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\n\nexport default function BasicModal() {\n    const [open, setOpen] = useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    const [title, setTitle] = useState('')\n    const [budget, setBudget] = useState('')\n    const [tableData, setTableData] = useState([]);\n  \n    const createNewEnvelope = async (e) => {\n        e.preventDefault();\n        try {\n            const body = {title, budget}\n            const response = await fetch('http://localhost:5000/api', {\n                method: 'POST',\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify(body)\n            })\n            console.log(response)\n            alert('New envelope created, refresh table')\n            setTableData(response)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    return (\n      <div>\n        <Button onClick={handleOpen}> \n        <AddIcon />\n        Create New Envelope\n        </Button>\n\n        <Modal\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box sx={style}>\n              <form type='submit'>\n                  <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                      Create New Envelope\n                  </Typography>\n            \n            <hr/>\n              <TextField id=\"outlined-basic\" label=\"Title\" variant=\"outlined\" value={title} onChange={e => setTitle(e.target.value)} required/>\n            <hr/>\n              <InputLabel htmlFor=\"outlined-adornment-amount\">Amount</InputLabel>\n              <OutlinedInput\n              id=\"outlined-adornment-amount\"\n              value={budget}\n              onChange={e => setBudget(e.target.value)}\n              startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n              label=\"Amount\"\n              required\n              />\n            <hr/>\n              <Button variant=\"contained\" onClick={e => createNewEnvelope(e)} >Submit</Button>\n            </form>\n          </Box>\n        </Modal>\n      </div>\n    );\n  }",{"ruleId":"30","severity":1,"message":"31","line":28,"column":12,"nodeType":"32","messageId":"33","endLine":28,"endColumn":21},"no-unused-vars","'tableData' is assigned a value but never used.","Identifier","unusedVar"]